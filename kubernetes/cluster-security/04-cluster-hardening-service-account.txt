# Create a Pod
kubectl apply -f - << EOF
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: web
  name: web
spec:
  automountServiceAccountToken: true
  containers:
  - command:
    - sleep
    - 1d
    image: alpine:3.6
    name: web
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
EOF

# Exec into pod and execute the following command
~ # mount | grep servi
tmpfs on /var/run/secrets/kubernetes.io/serviceaccount type tmpfs (ro,relatime) 

# cd to the service account dir and list contents
/var/run/secrets/kubernetes.io/serviceaccount # ls
ca.crt     namespace  token

/var/run/secrets/kubernetes.io/serviceaccount # cat ca.crt 
-----BEGIN CERTIFICATE-----
MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
cm5ldGVzMB4XDTIwMTIyOTE3MDUxNVoXDTMwMTIyNzE3MDUxNVowFTETMBEGA1UE
AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM0k
V17cCsKdTrdxyjLGfyBrSfr/dPxa+bIF2z3A92ngIn+Xm8SLXOfh5Wsb0kNE9V4H
Y/9380y7+z8JSwjbfmaJAtPcHckrwbWVg1wCgNjJGCP882TTbJO8qNdR6Rt/BIk3
EkHReiobcaXX1C/yLXQ2Wp5vK86Y1HkjdkzpMXfhaA1cX387ZptFiT4jljDnG8MR
5qzhMcJu9pjfXO2UZQtkpa5C7lJsRBHuNE+F91PrNuPOodD5ijV4JzXi8hhIG93k
js5BnNZGuj0AtW7n3oLepa+oK/nwWPcbo5B+G49m3GIYbid8whEZMDWnEI0WvFn8
G9w0FqbfoJvS9CnRNBcCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
/wQFMAMBAf8wHQYDVR0OBBYEFFC+jipLieBzi1GuzcOScLlEXehNMA0GCSqGSIb3
DQEBCwUAA4IBAQBrlJuHwTDJlu3NpaBHZdMf0TNJhgAP1JVoTFKgezd7KrKMUjtY
ybqsrByAYNTnp4POYNvMWLQQmVon9LZTj5yVL2LfnYyHYrWma/7HqVK4QurhPFGu
AxS65p9Eujh2bpbGcryrd8cRe3S2x5LCklWe0OdAhQLVF8kual7F9AIKaK8rNx1l
aJ4PbBTZG0MCwdA+Gf8uglTEzwEcBHPNl0m8FInUn64fH8gIxpCSxqhvirKQKlKG
Xo1mGbs2+Jh4a13mbxsL/J+aaxObvP199hSrQpaSdIZK8vrc1G9yEM2CtMaBeX+d
muoIedI9HgsAQDamGWSx+OcO4M7MC7gdT81D
-----END CERTIFICATE-----

/var/run/secrets/kubernetes.io/serviceaccount # cat token 
eyJhbGciOiJSUzI1NiIsImtpZCI6IlhSN0FLRkpSWWRuX3h0VE9zczVVdEVsM2ZVM2NvOHM0bkJqOXdvY25udW8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tc2xta2MiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjA3ZWU2MjYyLWEzMWYtNDNkNS1hNWY3LTBlMzNmY2UwYWI0NCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.UZI-iOyhPDdDGMEx7yd_jTV7pMKpNgNvafahwJ2QrlWwYvuA9vRJwNXGppcfUvNjHfTpGyPoFWkmb2r36HdGDsexGJFEjL2OIDfcmUbidHoedL3Tqh0-hY0iti8pX5gfGbECsGFLsDHlrM5cSzOB-9NnM7Iuw2vFYdRy2D3W1D2Tfvne97UpWVplZqTzlsZlFhnysih_Vz2CkULbKYhTrcHdZ-tyB8qkLwcjE6GHVIdeTq5W914WaQoAwMM_antUM9k2LTYisJKBbET0hfV4P-jmD0wnNK1apMMMS5UIRutzdZY7SUNocYXWPQ0hg1UPtTaYgnNbyy0CICHHFryqsQ

/var/run/secrets/kubernetes.io/serviceaccount # cat namespace 
default

The above information can be used to talk to API server. i.e if you have kubectl installed in the container, you can execute the kubectl command to access the cluster. Also,If you know how to use Client APIs / Curl command, you can access the API server from inside Pod. The service account should have least privilege to avoid security issues.

# Note: 'automountServiceAccountToken: false' won't mount the secret tocken. It is recomended to disable mounting if the Pod doesn't have to talk to API server.

kubectl get pods --as=system:serviceaccount:default:default
NAME   READY   STATUS    RESTARTS   AGE
web    1/1     Running   0          55m


# Create Service account
kubectl create sa demo-sa


[dinesh@master1 ~]$ kubectl get pods --as=system:serviceaccount:default:demo-sa
Error from server (Forbidden): pods is forbidden: User "system:serviceaccount:default:demo-sa" cannot list resource "pods" in API group "" in the namespace "default"

# By default the new SA won't have any access, let's bind a cluster role.

[dinesh@master1 ~]$ kubectl create clusterrolebinding demo-sa-crole --clusterrole=view --user=system:serviceaccount:default:demo-sa
clusterrolebinding.rbac.authorization.k8s.io/demo-sa-crole created
[dinesh@master1 ~]$ 
[dinesh@master1 ~]$ kubectl get pods --as=system:serviceaccount:default:demo-sa
NAME   READY   STATUS    RESTARTS   AGE
web    1/1     Running   0          57m
[dinesh@master1 ~]$ 

# Note: I have assigned cluster role, i.e the SA can access cluster wide resources. in production env, don't give cluster wide permission to the Pods.

Add 'serviceAccountName: demo-sa' to Pod spec to mount the demo-sa instaed of 'default' SA.
