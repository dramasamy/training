
# kubectl create secret generic my-secret --from-literal=key1=supersecret --from-literal=key2=topsecret

kubectl apply -f - << EOF
apiVersion: v1
data:
  key1: c3VwZXJzZWNyZXQ=
  key2: dG9wc2VjcmV0
kind: Secret
metadata:
  creationTimestamp: null
  name: my-secret
EOF

# Get secret as yaml
[dinesh@master1 ~]$ kubectl get secret my-secret -o yaml
apiVersion: v1
data:
  key1: c3VwZXJzZWNyZXQ=
  key2: dG9wc2VjcmV0
kind: Secret
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"key1":"c3VwZXJzZWNyZXQ=","key2":"dG9wc2VjcmV0"},"kind":"Secret","metadata":{"annotations":{},"creationTimestamp":null,"name":"my-secret","namespace":"default"}}
  creationTimestamp: "2021-01-03T19:03:31Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:key1: {}
        f:key2: {}
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
      f:type: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2021-01-03T19:03:31Z"
  name: my-secret
  namespace: default
  resourceVersion: "138245"
  selfLink: /api/v1/namespaces/default/secrets/my-secret
  uid: cdabb5eb-0786-49d5-a375-5199960d7d8f
type: Opaque


